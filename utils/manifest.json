{
    "metadata": {
        "dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v10.json",
        "dbt_version": "1.6.10",
        "generated_at": "2024-03-14T17:09:02.906503Z",
        "invocation_id": "1c40c7d1-c82f-413f-9404-8570aaa3052e",
        "env": {},
        "project_name": "jaffle_shop",
        "project_id": "06e5b98c2db46f8a72cc4f66410e9b3b",
        "user_id": null,
        "send_anonymous_usage_stats": false,
        "adapter_type": "bigquery"
    },
    "nodes": {
        "model.jaffle_shop.customers": {
            "database": "pmg-datawarehouse",
            "schema": "dbt_ian",
            "name": "customers",
            "resource_type": "model",
            "package_name": "jaffle_shop",
            "path": "customers.sql",
            "original_file_path": "models/customers.sql",
            "unique_id": "model.jaffle_shop.customers",
            "fqn": [
                "jaffle_shop",
                "customers"
            ],
            "alias": "customers",
            "checksum": {
                "name": "sha256",
                "checksum": "60bd72e33da43fff3a7e7609135c17cd4468bd22afec0735dd36018bfb5af30a"
            },
            "config": {
                "enabled": true,
                "alias": null,
                "schema": null,
                "database": null,
                "tags": [],
                "meta": {},
                "group": null,
                "materialized": "table",
                "incremental_strategy": null,
                "persist_docs": {},
                "quoting": {},
                "column_types": {},
                "full_refresh": null,
                "unique_key": null,
                "on_schema_change": "ignore",
                "on_configuration_change": "apply",
                "grants": {},
                "packages": [],
                "docs": {
                    "show": true,
                    "node_color": null
                },
                "contract": {
                    "enforced": false
                },
                "post-hook": [],
                "pre-hook": []
            },
            "tags": [],
            "description": "This table has basic information about a customer, as well as some derived facts based on a customer's orders",
            "columns": {
                "customer_id": {
                    "name": "customer_id",
                    "description": "This is a unique identifier for a customer",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "first_name": {
                    "name": "first_name",
                    "description": "Customer's first name. PII.",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "last_name": {
                    "name": "last_name",
                    "description": "Customer's last name. PII.",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "first_order": {
                    "name": "first_order",
                    "description": "Date (UTC) of a customer's first order",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "most_recent_order": {
                    "name": "most_recent_order",
                    "description": "Date (UTC) of a customer's most recent order",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "number_of_orders": {
                    "name": "number_of_orders",
                    "description": "Count of the number of orders a customer has placed",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "total_order_amount": {
                    "name": "total_order_amount",
                    "description": "Total value (AUD) of a customer's orders",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                }
            },
            "meta": {},
            "group": null,
            "docs": {
                "show": true,
                "node_color": null
            },
            "patch_path": "jaffle_shop://models/schema.yml",
            "build_path": null,
            "deferred": false,
            "unrendered_config": {
                "materialized": "table"
            },
            "created_at": 1710436143.26653,
            "relation_name": "`pmg-datawarehouse`.`dbt_ian`.`customers`",
            "raw_code": "with customers as (\n\nselect * from {{ ref('stg_customers') }}\n\n),\n\norders as (\n\nselect * from {{ ref('stg_orders') }}\n\n),\n\npayments as (\n\nselect * from {{ ref('stg_payments') }}\n\n),\n\ncustomer_orders as (\n\nselect\ncustomer_id,\n\nmin(order_date) as first_order,\nmax(order_date) as most_recent_order,\ncount(order_id) as number_of_orders\nfrom orders\n\ngroup by customer_id\n\n),\n\ncustomer_payments as (\n\nselect\norders.customer_id,\nsum(amount) as total_amount\n\nfrom payments\n\nleft join orders on\n payments.order_id = orders.order_id\n\ngroup by orders.customer_id\n\n),\n\nfinal as (\n\nselect\ncustomers.customer_id,\ncustomers.first_name,\ncustomers.last_name,\ncustomer_orders.first_order,\ncustomer_orders.most_recent_order,\ncustomer_orders.number_of_orders,\ncustomer_payments.total_amount as customer_lifetime_value\n\nfrom customers\n\nleft join customer_orders\non customers.customer_id = customer_orders.customer_id\n\nleft join customer_payments\non  customers.customer_id = customer_payments.customer_id\n\n)\n\nselect * from final",
            "language": "sql",
            "refs": [
                {
                    "name": "stg_customers",
                    "package": null,
                    "version": null
                },
                {
                    "name": "stg_orders",
                    "package": null,
                    "version": null
                },
                {
                    "name": "stg_payments",
                    "package": null,
                    "version": null
                }
            ],
            "sources": [],
            "metrics": [],
            "depends_on": {
                "macros": [],
                "nodes": [
                    "model.jaffle_shop.stg_customers",
                    "model.jaffle_shop.stg_orders",
                    "model.jaffle_shop.stg_payments"
                ]
            },
            "compiled_path": "target/compiled/jaffle_shop/models/customers.sql",
            "compiled": true,
            "compiled_code": "with customers as (\n\nselect * from `pmg-datawarehouse`.`dbt_ian`.`stg_customers`\n\n),\n\norders as (\n\nselect * from `pmg-datawarehouse`.`dbt_ian`.`stg_orders`\n\n),\n\npayments as (\n\nselect * from `pmg-datawarehouse`.`dbt_ian`.`stg_payments`\n\n),\n\ncustomer_orders as (\n\nselect\ncustomer_id,\n\nmin(order_date) as first_order,\nmax(order_date) as most_recent_order,\ncount(order_id) as number_of_orders\nfrom orders\n\ngroup by customer_id\n\n),\n\ncustomer_payments as (\n\nselect\norders.customer_id,\nsum(amount) as total_amount\n\nfrom payments\n\nleft join orders on\n payments.order_id = orders.order_id\n\ngroup by orders.customer_id\n\n),\n\nfinal as (\n\nselect\ncustomers.customer_id,\ncustomers.first_name,\ncustomers.last_name,\ncustomer_orders.first_order,\ncustomer_orders.most_recent_order,\ncustomer_orders.number_of_orders,\ncustomer_payments.total_amount as customer_lifetime_value\n\nfrom customers\n\nleft join customer_orders\non customers.customer_id = customer_orders.customer_id\n\nleft join customer_payments\non  customers.customer_id = customer_payments.customer_id\n\n)\n\nselect * from final",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "contract": {
                "enforced": false,
                "checksum": null
            },
            "access": "protected",
            "constraints": [],
            "version": null,
            "latest_version": null,
            "deprecation_date": null
        },
        "model.jaffle_shop.orders": {
            "database": "pmg-datawarehouse",
            "schema": "dbt_ian",
            "name": "orders",
            "resource_type": "model",
            "package_name": "jaffle_shop",
            "path": "orders.sql",
            "original_file_path": "models/orders.sql",
            "unique_id": "model.jaffle_shop.orders",
            "fqn": [
                "jaffle_shop",
                "orders"
            ],
            "alias": "orders",
            "checksum": {
                "name": "sha256",
                "checksum": "27f8c79aad1cfd8411ab9c3d2ce8da1d787f7f05c58bbee1d247510dc426be0f"
            },
            "config": {
                "enabled": true,
                "alias": null,
                "schema": null,
                "database": null,
                "tags": [],
                "meta": {},
                "group": null,
                "materialized": "table",
                "incremental_strategy": null,
                "persist_docs": {},
                "quoting": {},
                "column_types": {},
                "full_refresh": null,
                "unique_key": null,
                "on_schema_change": "ignore",
                "on_configuration_change": "apply",
                "grants": {},
                "packages": [],
                "docs": {
                    "show": true,
                    "node_color": null
                },
                "contract": {
                    "enforced": false
                },
                "post-hook": [],
                "pre-hook": []
            },
            "tags": [],
            "description": "This table has basic information about orders, as well as some derived facts based on payments",
            "columns": {
                "order_id": {
                    "name": "order_id",
                    "description": "This is a unique identifier for an order",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "customer_id": {
                    "name": "customer_id",
                    "description": "Foreign key to the customers table",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "order_date": {
                    "name": "order_date",
                    "description": "Date (UTC) that the order was placed",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "status": {
                    "name": "status",
                    "description": "Orders can be one of the following statuses:\n\n| status | description|\n|----------------|------------------------------------------------------------------------------------------------------------------------|\n| placed | The order has been placed but has not yet left the warehouse   |\n| shipped| The order has ben shipped to the customer and is currently in transit  |\n| completed  | The order has been received by the customer|\n| return_pending | The customer has indicated that they would like to return the order, but it has not yet been received at the warehouse |\n| returned   | The order has been returned by the customer and received at the warehouse  |",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "amount": {
                    "name": "amount",
                    "description": "Total amount (AUD) of the order",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "credit_card_amount": {
                    "name": "credit_card_amount",
                    "description": "Amount of the order (AUD) paid for by credit card",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "coupon_amount": {
                    "name": "coupon_amount",
                    "description": "Amount of the order (AUD) paid for by coupon",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "bank_transfer_amount": {
                    "name": "bank_transfer_amount",
                    "description": "Amount of the order (AUD) paid for by bank transfer",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "gift_card_amount": {
                    "name": "gift_card_amount",
                    "description": "Amount of the order (AUD) paid for by gift card",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                }
            },
            "meta": {},
            "group": null,
            "docs": {
                "show": true,
                "node_color": null
            },
            "patch_path": "jaffle_shop://models/schema.yml",
            "build_path": null,
            "deferred": false,
            "unrendered_config": {
                "materialized": "table"
            },
            "created_at": 1710436143.26789,
            "relation_name": "`pmg-datawarehouse`.`dbt_ian`.`orders`",
            "raw_code": "{% set payment_methods = ['credit_card', 'coupon', 'bank_transfer', 'gift_card'] %}\n\nwith orders as (\n\nselect * from {{ ref('stg_orders') }}\n\n),\n\npayments as (\n\nselect * from {{ ref('stg_payments') }}\n\n),\n\norder_payments as (\n\nselect\norder_id,\n\n{% for payment_method in payment_methods -%}\nsum(case when payment_method = '{{ payment_method }}' then amount else 0 end) as {{ payment_method }}_amount,\n{% endfor -%}\n\nsum(amount) as total_amount\n\nfrom payments\n\ngroup by order_id\n\n),\n\nfinal as (\n\nselect\norders.order_id,\norders.customer_id,\norders.order_date,\norders.status,\n\n{% for payment_method in payment_methods -%}\n\norder_payments.{{ payment_method }}_amount,\n\n{% endfor -%}\n\norder_payments.total_amount as amount\n\nfrom orders\n\n\nleft join order_payments\non orders.order_id = order_payments.order_id\n\n)\n\nselect * from final",
            "language": "sql",
            "refs": [
                {
                    "name": "stg_orders",
                    "package": null,
                    "version": null
                },
                {
                    "name": "stg_payments",
                    "package": null,
                    "version": null
                }
            ],
            "sources": [],
            "metrics": [],
            "depends_on": {
                "macros": [],
                "nodes": [
                    "model.jaffle_shop.stg_orders",
                    "model.jaffle_shop.stg_payments"
                ]
            },
            "compiled_path": "target/compiled/jaffle_shop/models/orders.sql",
            "compiled": true,
            "compiled_code": "\n\nwith orders as (\n\nselect * from `pmg-datawarehouse`.`dbt_ian`.`stg_orders`\n\n),\n\npayments as (\n\nselect * from `pmg-datawarehouse`.`dbt_ian`.`stg_payments`\n\n),\n\norder_payments as (\n\nselect\norder_id,\n\nsum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\nsum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\nsum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\nsum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\nsum(amount) as total_amount\n\nfrom payments\n\ngroup by order_id\n\n),\n\nfinal as (\n\nselect\norders.order_id,\norders.customer_id,\norders.order_date,\norders.status,\n\norder_payments.credit_card_amount,\n\norder_payments.coupon_amount,\n\norder_payments.bank_transfer_amount,\n\norder_payments.gift_card_amount,\n\norder_payments.total_amount as amount\n\nfrom orders\n\n\nleft join order_payments\non orders.order_id = order_payments.order_id\n\n)\n\nselect * from final",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "contract": {
                "enforced": false,
                "checksum": null
            },
            "access": "protected",
            "constraints": [],
            "version": null,
            "latest_version": null,
            "deprecation_date": null
        },
        "model.jaffle_shop.stg_customers": {
            "database": "pmg-datawarehouse",
            "schema": "dbt_ian",
            "name": "stg_customers",
            "resource_type": "model",
            "package_name": "jaffle_shop",
            "path": "staging/stg_customers.sql",
            "original_file_path": "models/staging/stg_customers.sql",
            "unique_id": "model.jaffle_shop.stg_customers",
            "fqn": [
                "jaffle_shop",
                "staging",
                "stg_customers"
            ],
            "alias": "stg_customers",
            "checksum": {
                "name": "sha256",
                "checksum": "2c8e294bc4a4a3441d66b5de4582f273cbb14f13f84eee46f897aa3861bfd0e0"
            },
            "config": {
                "enabled": true,
                "alias": null,
                "schema": null,
                "database": null,
                "tags": [],
                "meta": {},
                "group": null,
                "materialized": "view",
                "incremental_strategy": null,
                "persist_docs": {},
                "quoting": {},
                "column_types": {},
                "full_refresh": null,
                "unique_key": null,
                "on_schema_change": "ignore",
                "on_configuration_change": "apply",
                "grants": {},
                "packages": [],
                "docs": {
                    "show": true,
                    "node_color": null
                },
                "contract": {
                    "enforced": false
                },
                "post-hook": [],
                "pre-hook": []
            },
            "tags": [],
            "description": "",
            "columns": {
                "customer_id": {
                    "name": "customer_id",
                    "description": "",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                }
            },
            "meta": {},
            "group": null,
            "docs": {
                "show": true,
                "node_color": null
            },
            "patch_path": "jaffle_shop://models/staging/schema.yml",
            "build_path": null,
            "deferred": false,
            "unrendered_config": {
                "materialized": "view"
            },
            "created_at": 1710436143.273916,
            "relation_name": "`pmg-datawarehouse`.`dbt_ian`.`stg_customers`",
            "raw_code": "with source as (\n\nselect * from {{ source('playground', 'raw_customers') }}\n\n),\n\nrenamed as (\n\nselect\nid as customer_id,\nfirst_name,\nlast_name\n\nfrom source\n\n)\n\nselect * from renamed",
            "language": "sql",
            "refs": [],
            "sources": [
                [
                    "playground",
                    "raw_customers"
                ]
            ],
            "metrics": [],
            "depends_on": {
                "macros": [],
                "nodes": [
                    "source.jaffle_shop.playground.raw_customers"
                ]
            },
            "compiled_path": "target/compiled/jaffle_shop/models/staging/stg_customers.sql",
            "compiled": true,
            "compiled_code": "with source as (\n\nselect * from `pmg-datawarehouse`.`playground`.`raw_customers`\n\n),\n\nrenamed as (\n\nselect\nid as customer_id,\nfirst_name,\nlast_name\n\nfrom source\n\n)\n\nselect * from renamed",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "contract": {
                "enforced": false,
                "checksum": null
            },
            "access": "protected",
            "constraints": [],
            "version": null,
            "latest_version": null,
            "deprecation_date": null
        },
        "model.jaffle_shop.stg_payments": {
            "database": "pmg-datawarehouse",
            "schema": "dbt_ian",
            "name": "stg_payments",
            "resource_type": "model",
            "package_name": "jaffle_shop",
            "path": "staging/stg_payments.sql",
            "original_file_path": "models/staging/stg_payments.sql",
            "unique_id": "model.jaffle_shop.stg_payments",
            "fqn": [
                "jaffle_shop",
                "staging",
                "stg_payments"
            ],
            "alias": "stg_payments",
            "checksum": {
                "name": "sha256",
                "checksum": "a92004cf4e76d5118d622638f3fce59c80aa0acfec8926eb854c8f3e8f59c758"
            },
            "config": {
                "enabled": true,
                "alias": null,
                "schema": null,
                "database": null,
                "tags": [],
                "meta": {},
                "group": null,
                "materialized": "view",
                "incremental_strategy": null,
                "persist_docs": {},
                "quoting": {},
                "column_types": {},
                "full_refresh": null,
                "unique_key": null,
                "on_schema_change": "ignore",
                "on_configuration_change": "apply",
                "grants": {},
                "packages": [],
                "docs": {
                    "show": true,
                    "node_color": null
                },
                "contract": {
                    "enforced": false
                },
                "post-hook": [],
                "pre-hook": []
            },
            "tags": [],
            "description": "",
            "columns": {
                "payment_id": {
                    "name": "payment_id",
                    "description": "",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "payment_method": {
                    "name": "payment_method",
                    "description": "",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                }
            },
            "meta": {},
            "group": null,
            "docs": {
                "show": true,
                "node_color": null
            },
            "patch_path": "jaffle_shop://models/staging/schema.yml",
            "build_path": null,
            "deferred": false,
            "unrendered_config": {
                "materialized": "view"
            },
            "created_at": 1710436143.274656,
            "relation_name": "`pmg-datawarehouse`.`dbt_ian`.`stg_payments`",
            "raw_code": "with source as (\n\nselect * from {{ source('playground', 'raw_payments') }}\n\n),\n\nrenamed as (\n\nselect\nid as payment_id,\norder_id,\npayment_method,\n\n-- `amount` is currently stored in cents, so we convert it to dollars\namount / 100 as amount\n\nfrom source\n\n)\n\nselect * from renamed",
            "language": "sql",
            "refs": [],
            "sources": [
                [
                    "playground",
                    "raw_payments"
                ]
            ],
            "metrics": [],
            "depends_on": {
                "macros": [],
                "nodes": [
                    "source.jaffle_shop.playground.raw_payments"
                ]
            },
            "compiled_path": "target/compiled/jaffle_shop/models/staging/stg_payments.sql",
            "compiled": true,
            "compiled_code": "with source as (\n\nselect * from `pmg-datawarehouse`.`playground`.`raw_payments`\n\n),\n\nrenamed as (\n\nselect\nid as payment_id,\norder_id,\npayment_method,\n\n-- `amount` is currently stored in cents, so we convert it to dollars\namount / 100 as amount\n\nfrom source\n\n)\n\nselect * from renamed",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "contract": {
                "enforced": false,
                "checksum": null
            },
            "access": "protected",
            "constraints": [],
            "version": null,
            "latest_version": null,
            "deprecation_date": null
        },
        "model.jaffle_shop.stg_orders": {
            "database": "pmg-datawarehouse",
            "schema": "dbt_ian",
            "name": "stg_orders",
            "resource_type": "model",
            "package_name": "jaffle_shop",
            "path": "staging/stg_orders.sql",
            "original_file_path": "models/staging/stg_orders.sql",
            "unique_id": "model.jaffle_shop.stg_orders",
            "fqn": [
                "jaffle_shop",
                "staging",
                "stg_orders"
            ],
            "alias": "stg_orders",
            "checksum": {
                "name": "sha256",
                "checksum": "5999f54083bd9143a5100691c96feb62696221b726e515c666f21fa975cea5f8"
            },
            "config": {
                "enabled": true,
                "alias": null,
                "schema": null,
                "database": null,
                "tags": [],
                "meta": {},
                "group": null,
                "materialized": "view",
                "incremental_strategy": null,
                "persist_docs": {},
                "quoting": {},
                "column_types": {},
                "full_refresh": null,
                "unique_key": null,
                "on_schema_change": "ignore",
                "on_configuration_change": "apply",
                "grants": {},
                "packages": [],
                "docs": {
                    "show": true,
                    "node_color": null
                },
                "contract": {
                    "enforced": false
                },
                "post-hook": [],
                "pre-hook": []
            },
            "tags": [],
            "description": "",
            "columns": {
                "order_id": {
                    "name": "order_id",
                    "description": "",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                },
                "status": {
                    "name": "status",
                    "description": "",
                    "meta": {},
                    "data_type": null,
                    "constraints": [],
                    "quote": null,
                    "tags": []
                }
            },
            "meta": {},
            "group": null,
            "docs": {
                "show": true,
                "node_color": null
            },
            "patch_path": "jaffle_shop://models/staging/schema.yml",
            "build_path": null,
            "deferred": false,
            "unrendered_config": {
                "materialized": "view"
            },
            "created_at": 1710436143.274189,
            "relation_name": "`pmg-datawarehouse`.`dbt_ian`.`stg_orders`",
            "raw_code": "with source as (\n\nselect * from {{ source('playground', 'raw_orders') }}\n\n),\n\nrenamed as (\n\nselect\nid as order_id,\nuser_id as customer_id,\norder_date,\nstatus\n\nfrom source\n\n)\n\nselect * from renamed",
            "language": "sql",
            "refs": [],
            "sources": [
                [
                    "playground",
                    "raw_orders"
                ]
            ],
            "metrics": [],
            "depends_on": {
                "macros": [],
                "nodes": [
                    "source.jaffle_shop.playground.raw_orders"
                ]
            },
            "compiled_path": "target/compiled/jaffle_shop/models/staging/stg_orders.sql",
            "compiled": true,
            "compiled_code": "with source as (\n\nselect * from `pmg-datawarehouse`.`playground`.`raw_orders`\n\n),\n\nrenamed as (\n\nselect\nid as order_id,\nuser_id as customer_id,\norder_date,\nstatus\n\nfrom source\n\n)\n\nselect * from renamed",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "contract": {
                "enforced": false,
                "checksum": null
            },
            "access": "protected",
            "constraints": [],
            "version": null,
            "latest_version": null,
            "deprecation_date": null
        }
    },
    "sources": {
        "source.jaffle_shop.playground.raw_customers": {
            "database": "pmg-datawarehouse",
            "schema": "playground",
            "name": "raw_customers",
            "resource_type": "source",
            "package_name": "jaffle_shop",
            "path": "models/sources.yml",
            "original_file_path": "models/sources.yml",
            "unique_id": "source.jaffle_shop.playground.raw_customers",
            "fqn": [
                "jaffle_shop",
                "playground",
                "raw_customers"
            ],
            "source_name": "playground",
            "source_description": "",
            "loader": "",
            "identifier": "raw_customers",
            "quoting": {
                "database": null,
                "schema": null,
                "identifier": null,
                "column": null
            },
            "loaded_at_field": null,
            "freshness": {
                "warn_after": {
                    "count": null,
                    "period": null
                },
                "error_after": {
                    "count": null,
                    "period": null
                },
                "filter": null
            },
            "external": null,
            "description": "",
            "columns": {},
            "meta": {},
            "source_meta": {},
            "tags": [],
            "config": {
                "enabled": true
            },
            "patch_path": null,
            "unrendered_config": {},
            "relation_name": "`pmg-datawarehouse`.`playground`.`raw_customers`",
            "created_at": 1710436143.274979
        },
        "source.jaffle_shop.playground.raw_orders": {
            "database": "pmg-datawarehouse",
            "schema": "playground",
            "name": "raw_orders",
            "resource_type": "source",
            "package_name": "jaffle_shop",
            "path": "models/sources.yml",
            "original_file_path": "models/sources.yml",
            "unique_id": "source.jaffle_shop.playground.raw_orders",
            "fqn": [
                "jaffle_shop",
                "playground",
                "raw_orders"
            ],
            "source_name": "playground",
            "source_description": "",
            "loader": "",
            "identifier": "raw_orders",
            "quoting": {
                "database": null,
                "schema": null,
                "identifier": null,
                "column": null
            },
            "loaded_at_field": null,
            "freshness": {
                "warn_after": {
                    "count": null,
                    "period": null
                },
                "error_after": {
                    "count": null,
                    "period": null
                },
                "filter": null
            },
            "external": null,
            "description": "",
            "columns": {},
            "meta": {},
            "source_meta": {},
            "tags": [],
            "config": {
                "enabled": true
            },
            "patch_path": null,
            "unrendered_config": {},
            "relation_name": "`pmg-datawarehouse`.`playground`.`raw_orders`",
            "created_at": 1710436143.2750678
        },
        "source.jaffle_shop.playground.raw_payments": {
            "database": "pmg-datawarehouse",
            "schema": "playground",
            "name": "raw_payments",
            "resource_type": "source",
            "package_name": "jaffle_shop",
            "path": "models/sources.yml",
            "original_file_path": "models/sources.yml",
            "unique_id": "source.jaffle_shop.playground.raw_payments",
            "fqn": [
                "jaffle_shop",
                "playground",
                "raw_payments"
            ],
            "source_name": "playground",
            "source_description": "",
            "loader": "",
            "identifier": "raw_payments",
            "quoting": {
                "database": null,
                "schema": null,
                "identifier": null,
                "column": null
            },
            "loaded_at_field": null,
            "freshness": {
                "warn_after": {
                    "count": null,
                    "period": null
                },
                "error_after": {
                    "count": null,
                    "period": null
                },
                "filter": null
            },
            "external": null,
            "description": "",
            "columns": {},
            "meta": {},
            "source_meta": {},
            "tags": [],
            "config": {
                "enabled": true
            },
            "patch_path": null,
            "unrendered_config": {},
            "relation_name": "`pmg-datawarehouse`.`playground`.`raw_payments`",
            "created_at": 1710436143.2751281
        }
    },
    "macros": {},
    "docs": {},
    "exposures": {},
    "metrics": {},
    "groups": {},
    "selectors": {},
    "disabled": {},
    "parent_map": {
        "model.jaffle_shop.customers": [
            "model.jaffle_shop.stg_customers",
            "model.jaffle_shop.stg_orders",
            "model.jaffle_shop.stg_payments"
        ],
        "model.jaffle_shop.orders": [
            "model.jaffle_shop.stg_orders",
            "model.jaffle_shop.stg_payments"
        ],
        "model.jaffle_shop.stg_customers": [
            "source.jaffle_shop.playground.raw_customers"
        ],
        "model.jaffle_shop.stg_payments": [
            "source.jaffle_shop.playground.raw_payments"
        ],
        "model.jaffle_shop.stg_orders": [
            "source.jaffle_shop.playground.raw_orders"
        ],
        "source.jaffle_shop.playground.raw_customers": [],
        "source.jaffle_shop.playground.raw_orders": [],
        "source.jaffle_shop.playground.raw_payments": []
    },
    "child_map": {
        "model.jaffle_shop.customers": [],
        "model.jaffle_shop.orders": [],
        "model.jaffle_shop.stg_customers": [
            "model.jaffle_shop.customers"
        ],
        "model.jaffle_shop.stg_payments": [
            "model.jaffle_shop.customers",
            "model.jaffle_shop.orders"
        ],
        "model.jaffle_shop.stg_orders": [
            "model.jaffle_shop.customers",
            "model.jaffle_shop.orders"
        ],
        "source.jaffle_shop.playground.raw_customers": [
            "model.jaffle_shop.stg_customers"
        ],
        "source.jaffle_shop.playground.raw_orders": [
            "model.jaffle_shop.stg_orders"
        ],
        "source.jaffle_shop.playground.raw_payments": [
            "model.jaffle_shop.stg_payments"
        ]
    },
    "group_map": {},
    "semantic_models": {}
}